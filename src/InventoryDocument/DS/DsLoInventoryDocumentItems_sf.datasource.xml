<Datasource name="DsLoInventoryDocumentItems" backendSystem="sf" businessObjectClass="LoInventoryDocumentItems" readOnly="false" external="true" editableEntity="Order_Item__c" schemaVersion="2.0">
  <Attributes>
    <Attribute name="pKey" table="Order_Item__c" column="Id" />
    <Attribute name="uom" table="Order_Item__c" column="UoM__c" />
    <Attribute name="quantity" table="Order_Item__c" column="Quantity__c" />
    <Attribute name="targetQuantity" table="Order_Item__c" column="Target_Quantity__c" />
    <Attribute name="suggestedQuantity" table="Order_Item__c" column="Suggested_Quantity__c" />
    <Attribute name="productId" table="Order_Item__c" column="Product__c" />
    <Attribute name="modificationReason" table="Order_Item__c" column="Modification_Reason__c" />
    <Attribute name="price" table="Order_Item__c" column="Price__c" />
    <Attribute name="priceReceipt" table="Order_Item__c" column="Price_Receipt__c" />
    <Attribute name="basePrice" table="Order_Item__c" column="Base_Price__c" />
    <Attribute name="value" table="Order_Item__c" column="Value__c" />
    <Attribute name="valueReceipt" table="Order_Item__c" column="Value_Receipt__c" />
    <Attribute name="grossValueReceipt" table="Order_Item__c" column="Gross_Value_Receipt__c" />

    <Attribute name="basePrice" table="Order_Item__c" column="Base_Price__c" />
    <DerivedAttribute name="simplePricingBasePrice" value="Order_Item__c.Base_Price__c" />
    <DerivedAttribute name="grossValue" value="'0.0'" />
    <Attribute name="specialPriceReceipt" table="Order_Item__c" column="Special_Price_Receipt__c" />

    <Attribute name="orderItemTemplateId" table="Order_Item__c" column="Order_Item_Template__c" />
    <Attribute name="orderId" table="Order_Item__c" column="Order__c"/>
    <!-- Product2-->
    <Attribute name="description1" table="Product2" column="Description_1_#Language#__c" />
    <Attribute name="shortDescription" table="Product2" column="Short_Description_#Language#__c" />
    <Attribute name="gtin" table="Product2" column="GTIN__c" />
    <Attribute name="consumerGoodsProductCode" table="Product2" column="Consumer_Goods_Product_Code__c" />
    <Attribute name="productType" table="Product2" column="Product_Type__c" />
    <Attribute name="criterion3ProductDescription" table="Product2" column="Criterion_3_Product_Description__c" />
    <!-- Unit_Of_Measure__c -->
    <Attribute name="sort" table="Unit_Of_Measure__c" column="Sort__c" />
    <Attribute name="isOrderUnit" table="Unit_Of_Measure__c" column="Is_Order_Unit__c" />
    <Attribute name="basePriceReceipt" table="Order_Item__c" column="Base_Price__c" />
    <Attribute name="discount" table="Order_Item__c" column="Discount__c" />
    <Attribute name="piecesPerSmallestUnit" table="Unit_Of_Measure__c" column="Pieces_per_Smallest_Unit__c" />
    <Attribute name="piecesPerSmallestUnitForBasePrice" table="PriceUnit" column="Pieces_per_Smallest_Unit__c" />

    <Attribute name="isPriceUnit" table="Unit_Of_Measure__c" column="Is_Price_Unit__c" />    
    <!-- Product_Condition__c-->
    <Attribute name="simplePricingBasePrice" table="Product_Condition__c" column="Value__c" />

    <!-- Order_Item_Template__c-->
    <Attribute name="priceEffect" table="Order_Item_Template__c" column="Price_Effect__c" />

    <!-- Derived -->
    <DerivedAttribute name="referenceId" />
  </Attributes>
  <Entities>
    <Entity name="Order_Item__c" alias="" idAttribute="Id" />
  </Entities>
  <Database platform="SQLite">
    <Load>
      <![CDATA[
      // ###########################################
      // ## Items linked to the checkout Document ##
      // ###########################################

      var orderId = "";
      var commitDate = "";

      if (Utils.isDefined(jsonQuery.orderId)){
        orderId = Utils.convertForDBParam(jsonQuery.orderId, "DomPKey");
      }
      if (Utils.isDefined(jsonQuery.commitDate)){
        commitDate = Utils.convertForDBParam(jsonQuery.commitDate, "DomDate");
      }
      var sqlParams = {orderId,commitDate};


      var sqlstmt = " SELECT * from( ";
      sqlstmt += " 	SELECT Order_Item__c.Id AS pKey ";
      sqlstmt += " 	,'0'  AS isAddedMissingUoMItem ";
      sqlstmt += " 	,Order_Item__c.UoM__c AS uom ";
      sqlstmt += " 	,Order_Item__c.Quantity__c AS quantity ";
      sqlstmt += " 	,Order_Item__c.Target_Quantity__c AS targetQuantity ";
      sqlstmt += " 	,Order_Item__c.Suggested_Quantity__c AS suggestedQuantity ";
      sqlstmt += " 	,Order_Item__c.Product__c AS productId ";
      sqlstmt += " 	,Order_Item__c.Modification_Reason__c AS modificationReason ";
      sqlstmt += " 	,Order_Item__c.Price__c AS price ";
      sqlstmt += " 	,Order_Item__c.Price_Receipt__c AS priceReceipt ";
      sqlstmt += " 	,Order_Item__c.Base_Price__c AS basePrice ";
      sqlstmt += " 	,Order_Item__c.Value__c AS value ";
      sqlstmt += " 	,Order_Item__c.Value_Receipt__c AS valueReceipt ";
      sqlstmt += " 	,Order_Item__c.Gross_Value_Receipt__c AS grossValueReceipt ";
      sqlstmt += " 	,Order_Item__c.Order_Item_Template__c AS orderItemTemplateId ";
      sqlstmt += " 	,Order_Item__c.Product__c || Order_Item__c.Order_Item_Template__c  AS referenceId ";
      sqlstmt += " 	,Order_Item__c.Order__c AS orderId ";
      sqlstmt += " 	,Product2.Description_1_#Language#__c AS description1 ";
      sqlstmt += " 	,Product2.Short_Description_#Language#__c AS shortDescription ";
      sqlstmt += " 	,Product2.GTIN__c AS gtin ";
      sqlstmt += " 	,Product2.Consumer_Goods_Product_Code__c AS consumerGoodsProductCode ";
      sqlstmt += " 	,Product2.Product_Type__c AS productType ";
      sqlstmt += " 	,Product2.Criterion_3_Product_Description__c AS criterion3ProductDescription ";
      sqlstmt += " 	,Product_Condition__c.Value__c AS simplePricingBasePrice ";
      sqlstmt += " 	,Unit_Of_Measure__c.Sort__c AS sort ";
      sqlstmt += " 	,Unit_Of_Measure__c.Is_Order_Unit__c AS isOrderUnit ";
      sqlstmt += " 	,PriceUnit.Pieces_per_Smallest_Unit__c AS  piecesPerSmallestUnitForBasePrice";
      sqlstmt += " 	,Unit_Of_Measure__c.Pieces_per_Smallest_Unit__c AS  piecesPerSmallestUnit";
      sqlstmt += " 	,Unit_Of_Measure__c.Is_Price_Unit__c AS isPriceUnit ";
      sqlstmt += "  ,Order_Item_Template__c.Price_Effect__c AS priceEffect";
      sqlstmt += " FROM Order_Item__c ";
      sqlstmt += " INNER JOIN Product2 ON Order_Item__c.Product__c = Product2.Id ";
      sqlstmt += " INNER JOIN Unit_Of_Measure__c ON Unit_Of_Measure__c.Product__c = Order_Item__c.Product__c ";
      sqlstmt += " INNER JOIN Product_Condition__c ON Order_Item__c.Product__c = Product_Condition__c.Product__c ";
      sqlstmt += " INNER JOIN Condition_Template__c ON Condition_Template__c.Id = Product_Condition__c.Condition_Template__c ";
      sqlstmt += " INNER JOIN Order_Item_Template__c ON Order_Item_Template__c.Id = Order_Item__c.Order_Item_Template__c ";
      sqlstmt += " INNER JOIN Unit_of_Measure__c AS PriceUnit ON Order_Item__c.Product__c = PriceUnit.Product__c ";

      sqlstmt += " 	AND Unit_Of_Measure__c.Unit_Type__c = Order_Item__c.UoM__c ";
      sqlstmt += " WHERE 1 = 1 ";
      sqlstmt += " 	AND Order_Item__c.Order__c = '#orderId#' ";
      sqlstmt += " 	AND Unit_Of_Measure__c.Order_Ability__c = '1' ";
      sqlstmt += " 	AND PriceUnit.Is_Price_Unit__c = '1' ";
      sqlstmt += "  AND #compareAsDate('Product_Condition__c.Valid_From__c', 'Date','<=' , #commitDate#, 'Date')# ";
      sqlstmt += "  AND #compareAsDate('Product_Condition__c.Valid_Thru__c', 'Date','>=' ,#commitDate#, 'Date')# ";
      sqlstmt += "  AND EXISTS (SELECT NULL FROM System_Setting__c WHERE System_Setting__c.Value__c = Product_Condition__c.Price_Type__c AND System_Setting__c.Name = 'Default_Price_Type' AND System_Setting__c.IsDeleted <> '1') ";
      sqlstmt += "  AND EXISTS (SELECT NULL FROM System_Setting__c WHERE System_Setting__c.Value__c = Product_Condition__c.Price_List_Type__c AND System_Setting__c.Name = 'Default_Price_List_Type' AND System_Setting__c.IsDeleted <> '1') ";
      
      // ###########################
      // ## Missing UoMs of Items ##
      // ###########################
      sqlstmt += " UNION ALL ";
      sqlstmt += " 	SELECT  ' ' AS pKey ";
      sqlstmt += " 	,'1'  AS isAddedMissingUoMItem ";
      sqlstmt += " 	,Unit_Of_Measure__c.Unit_Type__c AS uom ";
      sqlstmt += " 	,0  AS quantity ";
      sqlstmt += " 	,0 AS targetQuantity ";
      sqlstmt += " 	,0 AS suggestedQuantity ";
      sqlstmt += " 	,Unit_Of_Measure__c.Product__c AS productId ";
      sqlstmt += " 	,' ' AS modificationReason ";
      sqlstmt += " 	,0 AS price ";
      sqlstmt += " 	,0 AS priceReceipt ";
      sqlstmt += " 	,0 AS basePrice ";
      sqlstmt += " 	,0 AS value ";
      sqlstmt += " 	,0 AS valueReceipt ";
      sqlstmt += " 	,0 AS grossValueReceipt ";
      sqlstmt += " 	,Order_Item__c.Order_Item_Template__c AS orderItemTemplateId ";
      sqlstmt += " 	,Unit_Of_Measure__c.Product__c || Order_Item__c.Order_Item_Template__c  AS referenceId ";
      sqlstmt += " 	,Order_Item__c.Order__c AS orderId ";
      sqlstmt += " 	,Product2.Description_1_#Language#__c AS description1 ";
      sqlstmt += " 	,Product2.Short_Description_#Language#__c AS shortDescription ";
      sqlstmt += " 	,Product2.GTIN__c AS gtin ";
      sqlstmt += " 	,Product2.Consumer_Goods_Product_Code__c AS consumerGoodsProductCode ";
      sqlstmt += " 	,Product2.Product_Type__c AS productType ";
      sqlstmt += " 	,Product2.Criterion_3_Product_Description__c AS criterion3ProductDescription ";
      sqlstmt += " 	,Product_Condition__c.Value__c AS simplePricingBasePrice ";
      sqlstmt += " 	,Unit_Of_Measure__c.Sort__c AS sort ";
      sqlstmt += " 	,Unit_Of_Measure__c.Is_Order_Unit__c AS isOrderUnit ";
      sqlstmt += " 	,PriceUnit.Pieces_per_Smallest_Unit__c AS  piecesPerSmallestUnitForBasePrice";
      sqlstmt += " 	,Unit_Of_Measure__c.Pieces_per_Smallest_Unit__c AS  piecesPerSmallestUnit";
      sqlstmt += " 	,Unit_Of_Measure__c.Is_Price_Unit__c AS isPriceUnit ";
      sqlstmt += "  ,Order_Item_Template__c.Price_Effect__c AS priceEffect";
      sqlstmt += " FROM Order_Item__c ";
      sqlstmt += " INNER JOIN Product2 ON Order_Item__c.Product__c = Product2.Id ";
      sqlstmt += " INNER JOIN Unit_Of_Measure__c ON Unit_Of_Measure__c.Product__c = Order_Item__c.Product__c ";
      sqlstmt += " INNER JOIN Product_Condition__c ON Order_Item__c.Product__c = Product_Condition__c.Product__c ";
      sqlstmt += " INNER JOIN Condition_Template__c ON Condition_Template__c.Id = Product_Condition__c.Condition_Template__c ";
      sqlstmt += " INNER JOIN Order_Item_Template__c ON Order_Item_Template__c.Id = Order_Item__c.Order_Item_Template__c ";
      sqlstmt += " INNER JOIN Unit_of_Measure__c AS PriceUnit ON Order_Item__c.Product__c = PriceUnit.Product__c ";
      
      sqlstmt += " AND NOT EXISTS "
      sqlstmt += " ( ";
      sqlstmt += "   SELECT NULL FROM Order_Item__c items ";
      sqlstmt += "   WHERE items.Product__c = Order_Item__c.Product__c ";
      sqlstmt += "   AND items.Order_Item_Template__c = Order_Item__c.Order_Item_Template__c ";
      sqlstmt += "   AND items.UoM__c = Unit_Of_Measure__c.Unit_Type__c ";
      sqlstmt += "    AND items.Order__c = Order_Item__c.Order__c ";
      sqlstmt += " ) ";
      sqlstmt += " WHERE 1 = 1 ";
      sqlstmt += " 	AND Order_Item__c.Order__c = '#orderId#' ";
      sqlstmt += " 	AND Unit_Of_Measure__c.Order_Ability__c = '1' ";
      sqlstmt += " 	AND PriceUnit.Is_Price_Unit__c = '1' ";
      sqlstmt += " AND #compareAsDate('Product_Condition__c.Valid_From__c', 'Date','<=' , #commitDate#, 'Date')# ";
      sqlstmt += "  AND #compareAsDate('Product_Condition__c.Valid_Thru__c', 'Date','>=' ,#commitDate#, 'Date')# ";
      sqlstmt += " AND EXISTS (SELECT NULL FROM System_Setting__c WHERE System_Setting__c.Value__c = Product_Condition__c.Price_Type__c AND System_Setting__c.Name = 'Default_Price_Type' AND System_Setting__c.IsDeleted <> '1') ";
      sqlstmt += " AND EXISTS (SELECT NULL FROM System_Setting__c WHERE System_Setting__c.Value__c = Product_Condition__c.Price_List_Type__c AND System_Setting__c.Name = 'Default_Price_List_Type' AND System_Setting__c.IsDeleted <> '1') ";
      sqlstmt += " ) ";
      sqlstmt += " ORDER BY referenceId ASC, ";
      sqlstmt += " 	     isOrderUnit DESC ";
      
      return Utils.replaceMacrosParam(sqlstmt, sqlParams);
      ]]>
</Load>
  </Database>
</Datasource>